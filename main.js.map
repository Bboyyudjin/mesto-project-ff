{"version":3,"file":"main.js","mappings":"mBAAO,SAASA,EAAUC,GAAqE,IAAlEC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAAcC,EAAUH,EAAVG,WAAYC,EAAOJ,EAAPI,QAASC,EAAcL,EAAdK,eAAgBC,EAAMN,EAANM,OAC9EC,EAAUL,EAAaM,cAAc,SAASC,WAAU,GACxDC,EAAYH,EAAQC,cAAc,gBAClCG,EAAaJ,EAAQC,cAAc,sBACnCI,EAAeL,EAAQC,cAAc,wBACrCK,EAAeN,EAAQC,cAAc,qBA6B3C,OA5BAE,EAAUI,IAAMb,EAAKc,KACrBL,EAAUM,IAAMf,EAAKgB,KACrBP,EAAUQ,iBAAiB,SAAQ,kBAAMb,EAAeK,EAAU,IAClEH,EAAQC,cAAc,gBAAgBW,YAAclB,EAAKgB,KAErDhB,EAAKmB,MAAMC,MAAQf,EACrBM,EAAaM,iBAAiB,SAAS,WACrCf,EAAWF,GACRqB,MAAK,kBAuBd,SAA4BrB,GAC1BA,EAAKsB,QACP,CAzBoBC,CAAmBjB,EAAQ,IACtCkB,MAAMC,QAAQC,MACnB,IAEAf,EAAagB,MAAMC,QAAU,OAG/BhB,EAAaM,YAAclB,EAAK6B,MAAMC,OACtCpB,EAAWO,iBAAiB,SAAS,WACnCd,EAAQH,EAAMK,GACXgB,MAAM,SAACU,GACN/B,EAAK6B,MAAQE,EAAIF,MACjBjB,EAAaM,YAAca,EAAIF,MAAMC,OAe7C,SAAcpB,GACZA,EAAWsB,UAAUC,OAAO,8BAC9B,CAhBQC,CAAKxB,EACP,IACCc,MAAMC,QAAQC,MACnB,IACI1B,EAAK6B,MAAMM,MAAK,SAAAC,GAAI,OAAIA,EAAKhB,MAAQf,CAAM,KAC7CK,EAAWsB,UAAUK,IAAI,+BAEpB/B,CACT,CCvBA,SAASgC,EAAgBC,GACP,WAAZA,EAAIC,KAENC,EADcC,SAASnC,cAAc,oBAGzC,CAEO,SAASoC,EAAUC,GACxBA,EAAMZ,UAAUK,IAAI,mBACpBK,SAASzB,iBAAiB,UAAWqB,EACvC,CAEO,SAASG,EAAWG,GACzBA,EAAMZ,UAAUV,OAAO,mBACvBoB,SAASG,oBAAoB,UAAWP,EAC1C,CC3BA,IAYMQ,EAAiB,SAACC,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAYxC,cAAc,IAAD4C,OAAKH,EAAaI,GAAE,WAClEJ,EAAahB,UAAUV,OAAO2B,EAAiBI,iBAC/CL,EAAahB,UAAUV,OAAO2B,EAAiBK,mBAC/CJ,EAAalB,UAAUV,OAAO2B,EAAiBM,YAC/CL,EAAahC,YAAc,EAC7B,EAiCMsC,EAAgB,SAACC,EAAeR,GACpCQ,EAAcC,UAAW,EACzBD,EAAczB,UAAUK,IAAIY,EAAiBU,oBAC/C,EAEaC,EAAkB,SAACb,EAAaE,GACzBY,MAAMC,KAAKf,EAAYgB,iBAAiBd,EAAiBe,gBACjEC,SAAQ,SAACjB,GACfF,EAAeC,EAAaC,EAAcC,EAC9C,IACA,IAAMQ,EAAgBV,EAAYxC,cAAc0C,EAAiBiB,sBACjEV,EAAcC,EAAeR,EAC/B,EAQMkB,EAAoB,SAACC,EAAWX,EAAeR,IAN7B,SAACmB,GACvB,OAAOA,EAAUjC,MAAK,SAACa,GACvB,OAAQA,EAAaqB,SAASC,KAChC,GACA,CAGMC,CAAgBH,IAGpBX,EAAcC,UAAW,EACzBD,EAAczB,UAAUV,OAAO2B,EAAiBU,sBAH9CH,EAAcC,EAAeR,EAKjC,EC9EMuB,EAAS,CACbC,QAAS,4CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAIpB,SAASC,EAAQC,EAAKC,GACpB,OAAOC,MAAMF,EAAKC,GACjBzD,KAAK2D,EACR,CAEO,IAkCM9E,EAAa,SAACF,GACzB,OAAO4E,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,WAAAtB,OAAUnD,EAAKoB,KAAO,CACpD6D,OAAQ,SACRP,QAASF,EAAOE,SAEpB,EAEavE,EAAU,SAACH,EAAMK,GAC5B,IAAM4E,EAASjF,EAAK6B,MAAMM,MAAK,SAAAC,GAAI,OAAIA,EAAKhB,MAAQf,CAAM,IAAI,SAAW,MACzE,OAAOuE,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,iBAAAtB,OAAgBnD,EAAKoB,KAAO,CACxD6D,OAAQA,EACRP,QAASF,EAAOE,SAEtB,EAYMM,EAAa,SAACjD,GAClB,OAAIA,EAAImD,GACGnD,EAAIoD,OAERC,QAAQC,OAAO,WAADlC,OAAYpB,EAAIuD,QACvC,EC7EO,SAASC,EAAQ3C,EAAO4C,GACd5C,EAAMrC,cAAc,kBAE1BW,YADLsE,EACmB,gBAEA,WAEvB,C,sGCAF,IAqBInF,EArBE4C,EAAmB,CACvBwC,aAAc,eACdzB,cAAe,gBACfE,qBAAsB,iBACtBP,oBAAqB,yBACrBN,gBAAiB,0BACjBE,WAAY,uBACZD,kBAAmB,wBAGfrD,EAAeyC,SAASnC,cAAc,kBAAkBmF,QACxDC,EAAWjD,SAASnC,cAAc,iBAClCqF,EAAgBlD,SAASnC,cAAc,oBACvCsF,EAAenD,SAASnC,cAAc,wBACtCuF,EAAapD,SAASnC,cAAc,qBACpCwF,EAAUD,EAAWvF,cAAc,iBACnCyF,EAAWF,EAAWvF,cAAc,mBACpC0F,EAAcvD,SAASnC,cAAc,sBACrC2F,EAAgBxD,SAASnC,cAAc,mBACvC4F,EAAczD,SAASnC,cAAc,mBACrC6F,EAAe1D,SAASnC,cAAc,0BHiBZ,SAAC0C,GACdY,MAAMC,KAAKpB,SAASqB,iBAAiBd,EAAiBwC,eAC9DxB,SAAQ,SAAClB,IAlBM,SAACA,EAAaE,GACtC,IAAMmB,EAAYP,MAAMC,KAAKf,EAAYgB,iBAAiBd,EAAiBe,gBACrEP,EAAgBV,EAAYxC,cAAc0C,EAAiBiB,sBAGjEC,EAAkBC,EAAWX,EAAeR,GAE5CmB,EAAUH,SAAQ,SAACjB,GACjBA,EAAa/B,iBAAiB,SAAS,YAhBhB,SAAC8B,EAAaC,EAAcC,GAChDD,EAAaqB,SAASC,MAGzBxB,EAAeC,EAAaC,EAAcC,GAxBvB,SAACF,EAAaC,EAAcC,GACjD,IAAMC,EAAeH,EAAYxC,cAAc,IAAD4C,OAAKH,EAAaI,GAAE,WAClEJ,EAAahB,UAAUK,IAAIY,EAAiBI,iBAC5CL,EAAahB,UAAUK,IAAIY,EAAiBK,mBAC5CJ,EAAalB,UAAUK,IAAIY,EAAiBM,YACxCP,EAAaqB,SAASgC,gBACxBnD,EAAahC,YAAc8B,EAAasD,QAAQC,aAEhDrD,EAAahC,YAAc8B,EAAawD,iBAE5C,CAYIC,CAAe1D,EAAaC,EAAcC,EAI9C,CAWMyD,CAAmB3D,EAAaC,EAAcC,GAE9CkB,EAAkBC,EAAWX,EAAeR,EAC9C,GACF,GACF,CAKI0D,CAAkB5D,EAAaE,EACjC,GACF,CGnBA2D,CAAiB3D,GAGjBP,SAASnC,cAAc,yBAAyBU,iBAAiB,SAAQ,WAAO0B,EAAUiD,GAexFiB,EAAUC,MAAQX,EAAYjF,YAC9B6F,EAASD,MAAQV,EAAalF,YAhBgG0C,EAAgBgC,EAAe3C,EAAiB,IAChLP,SAASnC,cAAc,wBAAwBU,iBAAiB,SAAQ,WAAO0B,EAAUkD,GA0CvFmB,EAAYC,QA1CiHrD,EAAgBiC,EAAc5C,EAAiB,IAC9KP,SAASnC,cAAc,mBAAmBU,iBAAiB,SAAQ,WAAO0B,EAAUsD,GA0ElFiB,EAAcD,QA1EwGrD,EAAgBqC,EAAahD,EAAiB,IACtKP,SAASqB,iBAAiB,UAAUE,SAAQ,SAAArB,GAAK,OJnC1C,SAA2BA,GAChCA,EAAMrC,cAAc,iBAAiBU,iBAAiB,SAAQ,kBAAMwB,EAAWG,EAAM,IACrFA,EAAM3B,iBAAiB,SAAQ,SAACsB,GAAG,OAGrC,SAA8BK,EAAOL,GAC/BA,EAAI4E,SAAWvE,GACjBH,EAAWG,EAEf,CAP0CwE,CAAqBxE,EAAOL,EAAI,GAC1E,CIgCqD8E,CAAkBzE,EAAM,IAG7E,IAAM0E,EAAkB5E,SAAS6E,MAAM,gBACjCP,EAActE,SAAS6E,MAAM,aAC7BL,EAAgBxE,SAAS6E,MAAM,iBAC/BV,EAAYS,EAAgB/G,cAAc,2BAC1CwG,EAAWO,EAAgB/G,cAAc,kCACzCiH,EAAcN,EAAc3G,cAAc,6BAyBhD+G,EAAgBrG,iBAAiB,UAhBjC,SAAiCsB,GF5BH,IAACvB,EAAMyG,EE6BjClF,EAAImF,iBACJnC,EAAQK,GAAe,IF9BI5E,EE+BZ6F,EAAUC,MF/BQW,EE+BDV,EAASD,MF9BpClC,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,aAAa,CAC3CQ,OAAQ,QACRP,QAASF,EAAOE,QAChBiD,KAAMC,KAAKC,UAAU,CACnB7G,KAAM,GAAFmC,OAAKnC,GACTyG,MAAO,GAAFtE,OAAKsE,QE0BTpG,MAAM,WACLoB,EAAWmD,GACXO,EAAYjF,YAAc2F,EAAUC,MACpCV,EAAalF,YAAc6F,EAASD,KACtC,IACCtF,MAAMC,QAAQC,OACdoG,SAAS,WACRvC,EAAQK,GAAe,EACzB,GAEN,IAKA,IAAMmC,EAAgBlC,EAAatF,cAAc,gCAC3CyH,EAAWnC,EAAatF,cAAc,0BA0B5C,SAASH,EAAeJ,GACtB2C,EAAUmD,GACVC,EAAQlF,IAAMb,EAAKa,IACnBkF,EAAQhF,IAAMf,EAAKe,IACnBiF,EAAS9E,YAAclB,EAAKe,GAC9B,CAPAiG,EAAY/F,iBAAiB,UAlB7B,SAAoBsB,GAClBA,EAAImF,iBACJnC,EAAQM,GAAc,GACtB,IAAMvF,EAAU,GAChBA,EAAQU,KAAO+G,EAAcjB,MAC7BxG,EAAQQ,KAAOkH,EAASlB,MFhDH,SAACxG,GACtB,OAAOsE,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,UAAU,CACxCQ,OAAQ,OACRP,QAASF,EAAOE,QAChBiD,KAAMC,KAAKC,UAAU,CACnB7G,KAAM,GAAFmC,OAAK7C,EAAQU,MACjBF,KAAM,GAAFqC,OAAK7C,EAAQQ,SAGvB,CEwCEmH,CAAQ3H,GACLe,MAAK,SAAArB,GACJ,IAAMkI,EAAcpI,EAAY,CAACE,KAAAA,EAAMC,aAAAA,EAAcC,WAAAA,EAAYC,QAAAA,EAASC,eAAAA,EAAgBC,OAAAA,IAC1FsF,EAASwC,QAAQD,GACjBzF,EAAWoD,EACb,IACCrE,MAAMC,QAAQC,OACdoG,SAAS,WACRvC,EAAQM,GAAc,EACxB,GACJ,IAWAqB,EAAcjG,iBAAiB,UAM/B,SAA4BsB,GFlDA,IAACsC,EEmD3BtC,EAAImF,iBACJnC,EAAQU,GAAa,IFpDMpB,EEqDd2C,EAAYV,MFpDlBlC,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,oBAAoB,CAClDQ,OAAQ,QACRP,QAASF,EAAOE,QAChBiD,KAAMC,KAAKC,UAAU,CACnBO,OAAQvD,OEiDTxD,MAAM,SAACU,GACNU,EAAWwD,GACXC,EAAcvE,MAAM0G,gBAAkB,OAAHlF,OAAUpB,EAAIqG,OAAM,IACzD,IACC5G,MAAMC,QAAQC,OACdoG,SAAS,WACRvC,EAAQU,GAAa,EACvB,GACJ,IAEAb,QAAQkD,IAAI,CF1GH1D,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,aAAa,CAC3CC,QAASF,EAAOE,UAPXE,EAAQ,GAADzB,OAAIqB,EAAOC,QAAO,UAAU,CACxCC,QAASF,EAAOE,YEgHjBrD,MAAK,SAAAtB,GAA2B,I,IAAAwI,G,EAAA,E,4CAAAxI,I,s1BAAzByI,EAAQD,EAAA,GAAEE,EAASF,EAAA,GACvBlI,EAASmI,EAASpH,IAClB+E,EAAYjF,YAAcsH,EAASxH,KACnCkF,EAAcvE,MAAM0G,gBAAkB,OAAHlF,OAAUqF,EAASJ,OAAM,KAC5DhC,EAAalF,YAAcsH,EAASf,MACpCgB,EAAUxE,SAAQ,SAAAjE,GAChB2F,EAAS+C,OAAO5I,EAAW,CAACE,KAAAA,EAAMC,aAAAA,EAAcC,WAAAA,EAAYC,QAAAA,EAASC,eAAAA,EAAgBC,OAAAA,IACvF,GACJ,IACCmB,MAAMC,QAAQC,M","sources":["webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/utils.js","webpack://yandex_praktikum/./src/scripts/index.js"],"sourcesContent":["export function createCard ({card, cardTemplate, deleteCard, addLike, openModalImage, userId}) {\r\n  const newCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = newCard.querySelector('.card__image');\r\n  const likeButton = newCard.querySelector('.card__like-button');\r\n  const deleteButton = newCard.querySelector('.card__delete-button');\r\n  const likesCounter = newCard.querySelector('.card__like-count');\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  cardImage.addEventListener('click',() => openModalImage(cardImage));\r\n  newCard.querySelector('.card__title').textContent = card.name;\r\n\r\n  if (card.owner._id === userId) {\r\n    deleteButton.addEventListener('click', () => {\r\n      deleteCard(card)\r\n        .then(() => deleteCardFromHtml(newCard))\r\n        .catch(console.error)\r\n    });\r\n  } else {\r\n    deleteButton.style.display = \"none\";\r\n  }\r\n\r\n  likesCounter.textContent = card.likes.length\r\n  likeButton.addEventListener('click', () => {\r\n    addLike(card, userId)\r\n      .then ((res) => {\r\n        card.likes = res.likes;\r\n        likesCounter.textContent = res.likes.length\r\n        like(likeButton)\r\n      })\r\n      .catch(console.error)\r\n  });\r\n  if (card.likes.some(user => user._id === userId)) {\r\n    likeButton.classList.add(\"card__like-button_is-active\");\r\n  }\r\n  return newCard;\r\n};\r\n\r\nfunction deleteCardFromHtml(card) {\r\n  card.remove();\r\n};\r\n\r\nfunction like(likeButton) {\r\n  likeButton.classList.toggle(\"card__like-button_is-active\");\r\n}","// Закрытие попапов\r\nexport function addCloseListeners(popup){\r\n  popup.querySelector('.popup__close').addEventListener('click',() => closePopup(popup));\r\n  popup.addEventListener('click',(evt) => closePopupByOverflow(popup, evt));\r\n}\r\n\r\nfunction closePopupByOverflow(popup, evt) {\r\n  if (evt.target === popup) {\r\n    closePopup(popup);\r\n  }\r\n};\r\n\r\nfunction closePopupByEsc(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popup = document.querySelector(\".popup_is-opened\")\r\n    closePopup(popup);\r\n  }\r\n};\r\n\r\nexport function openPopup(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener('keydown', closePopupByEsc);\r\n};\r\n\r\nexport function closePopup(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener('keydown', closePopupByEsc);\r\n}","const showInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  inputElement.classList.add(validationConfig.invalidInputClass);\r\n  errorElement.classList.add(validationConfig.errorClass)\r\n  if (inputElement.validity.patternMismatch) {\r\n    errorElement.textContent = inputElement.dataset.errorMessage;\r\n  } else {\r\n    errorElement.textContent = inputElement.validationMessage;\r\n  }\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  inputElement.classList.remove(validationConfig.invalidInputClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, validationConfig);\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  // чтобы проверить состояние кнопки в самом начале\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      // чтобы проверять его при изменении любого из полей\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\nconst disableButton = (buttonElement, validationConfig) => {\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n}\r\n\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  disableButton(buttonElement, validationConfig);\r\n}\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n  return !inputElement.validity.valid;\r\n}); \r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    disableButton(buttonElement, validationConfig);\r\n} else {\r\n  buttonElement.disabled = false;\r\n  buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n}\r\n}","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-28',\r\n  headers: {\r\n    authorization: '2ce07d2c-6a68-45be-8e63-bd0f31432b5b',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction request(url, options) {\r\n  return fetch(url, options)\r\n  .then(checkFetch)\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n  return request(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n  return request(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const updateUserInfo = (name, about) => {\r\n  return request(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      about: `${about}`\r\n    })\r\n  })\r\n}\r\n\r\nexport const addCard = (newCard) => {\r\n  return request(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${newCard.name}`,\r\n      link: `${newCard.link}`\r\n    })\r\n  })\r\n}\r\n\r\nexport const deleteCard = (card) => {\r\n  return request(`${config.baseUrl}/cards/${card._id}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\nexport const addLike = (card, userId) => { \r\n  const method = card.likes.some(user => user._id === userId) ? 'DELETE' : 'PUT';\r\n  return request(`${config.baseUrl}/cards/likes/${card._id}`, { \r\n      method: method, \r\n      headers: config.headers \r\n  })\r\n}\r\n\r\nexport const updateAvatar = (url) => {\r\n  return request(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: url\r\n    })\r\n  })\r\n}\r\n\r\nconst checkFetch = (res) => { \r\n  if (res.ok) { \r\n      return res.json();\r\n  } \r\n  return Promise.reject(`Ошибка: ${res.status}`); \r\n}\r\n","export function loading(popup, isLoading) {\r\n  const button = popup.querySelector(\".popup__button\");\r\n  if (isLoading) {\r\n    button.textContent = 'Сохранение...'\r\n  } else {\r\n    button.textContent = 'Сохранить'\r\n  }\r\n  }","import {createCard} from \"../components/card.js\";\r\nimport {openPopup, closePopup, addCloseListeners} from \"../components/modal.js\";\r\nimport {enableValidation, clearValidation} from \"../components/validation.js\";\r\nimport {getUserInfo, getInitialCards, updateUserInfo, addCard, deleteCard, addLike, updateAvatar} from \"../components/api.js\"\r\nimport {loading} from \"../components/utils.js\"\r\nimport '../pages/index.css';\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible',\r\n  invalidInputClass: 'popup__input_invalid'\r\n};\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst cardList = document.querySelector('.places__list');\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupImage = document.querySelector('.popup_type_image');\r\nconst cardImg = popupImage.querySelector('.popup__image');\r\nconst cardName = popupImage.querySelector('.popup__caption');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileAbout = document.querySelector(\".profile__description\");\r\nlet userId;\r\n\r\nenableValidation(validationConfig);\r\n\r\n// Открытие попапов\r\ndocument.querySelector('.profile__edit-button').addEventListener('click',() => {openPopup(popupTypeEdit); makeDefaultProfile(); clearValidation(popupTypeEdit, validationConfig)});\r\ndocument.querySelector('.profile__add-button').addEventListener('click',() => {openPopup(popupNewCard); makeNewCardDefaults(); clearValidation(popupNewCard, validationConfig)});\r\ndocument.querySelector('.profile__image').addEventListener('click',() => {openPopup(popupAvatar); makeAvatarDefaults(); clearValidation(popupAvatar, validationConfig)});\r\ndocument.querySelectorAll('.popup').forEach(popup => addCloseListeners(popup)); \r\n\r\n// Редактирование профиля\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nconst formNewCard = document.forms[\"new-place\"];\r\nconst formNewAvatar = document.forms[\"avatar-change\"]\r\nconst nameInput = formEditProfile.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formEditProfile.querySelector(\".popup__input_type_description\");\r\nconst avatarInput = formNewAvatar.querySelector(\".popup__input_type_avatar\");\r\n\r\n// Текущие данные профиля\r\nfunction makeDefaultProfile(){\r\n  nameInput.value = profileName.textContent;\r\n  jobInput.value = profileAbout.textContent;\r\n};\r\n\r\n// Изменение профиля\r\nfunction handleEditProfileSubmit(evt) {\r\n    evt.preventDefault();\r\n    loading(popupTypeEdit, true)\r\n    updateUserInfo(nameInput.value, jobInput.value)\r\n      .then (() => {\r\n        closePopup(popupTypeEdit)\r\n        profileName.textContent = nameInput.value;\r\n        profileAbout.textContent = jobInput.value;\r\n      })\r\n      .catch(console.error)\r\n      .finally (() => {\r\n        loading(popupTypeEdit, false)\r\n      })\r\n    \r\n}\r\n\r\nformEditProfile.addEventListener('submit', handleEditProfileSubmit);\r\n\r\n// Добавление карточки\r\nconst cardNameInput = popupNewCard.querySelector(\".popup__input_type_card-name\");\r\nconst urlInput = popupNewCard.querySelector(\".popup__input_type_url\");\r\n\r\nfunction makeNewCardDefaults(){\r\n  formNewCard.reset();\r\n};\r\n\r\nfunction addNewCard(evt) {\r\n  evt.preventDefault();\r\n  loading(popupNewCard, true);\r\n  const newCard = [];\r\n  newCard.name = cardNameInput.value;\r\n  newCard.link = urlInput.value;\r\n  addCard(newCard)\r\n    .then(card => {\r\n      const cardElement = createCard ({card, cardTemplate, deleteCard, addLike, openModalImage, userId});\r\n      cardList.prepend(cardElement);\r\n      closePopup(popupNewCard);\r\n    })\r\n    .catch(console.error)\r\n    .finally (() => {\r\n      loading(popupNewCard, false)\r\n    })\r\n}\r\n\r\nformNewCard.addEventListener('submit', addNewCard);\r\n\r\nfunction openModalImage(card) {\r\n  openPopup(popupImage);\r\n  cardImg.src = card.src;\r\n  cardImg.alt = card.alt;\r\n  cardName.textContent = card.alt;\r\n}\r\n\r\nformNewAvatar.addEventListener('submit', editProfileAvatar);\r\n\r\nfunction makeAvatarDefaults () {\r\n  formNewAvatar.reset();\r\n}\r\n\r\nfunction editProfileAvatar (evt) {\r\n  evt.preventDefault();\r\n  loading(popupAvatar, true)\r\n  updateAvatar(avatarInput.value)\r\n    .then ((res) => {\r\n      closePopup(popupAvatar)\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`;\r\n    })\r\n    .catch(console.error)\r\n    .finally (() => {\r\n      loading(popupAvatar, false)\r\n    })\r\n}\r\n\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userInfo, cardsInfo]) => {\r\n      userId = userInfo._id\r\n      profileName.textContent = userInfo.name\r\n      profileAvatar.style.backgroundImage = `url(${userInfo.avatar})`\r\n      profileAbout.textContent = userInfo.about\r\n      cardsInfo.forEach(card =>{\r\n        cardList.append(createCard({card, cardTemplate, deleteCard, addLike, openModalImage, userId}))\r\n      })\r\n  })\r\n  .catch(console.error)\r\n"],"names":["createCard","_ref","card","cardTemplate","deleteCard","addLike","openModalImage","userId","newCard","querySelector","cloneNode","cardImage","likeButton","deleteButton","likesCounter","src","link","alt","name","addEventListener","textContent","owner","_id","then","remove","deleteCardFromHtml","catch","console","error","style","display","likes","length","res","classList","toggle","like","some","user","add","closePopupByEsc","evt","key","closePopup","document","openPopup","popup","removeEventListener","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","invalidInputClass","errorClass","disableButton","buttonElement","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","forEach","submitButtonSelector","toggleButtonState","inputList","validity","valid","hasInvalidInput","config","baseUrl","headers","authorization","request","url","options","fetch","checkFetch","method","ok","json","Promise","reject","status","loading","isLoading","formSelector","content","cardList","popupTypeEdit","popupNewCard","popupImage","cardImg","cardName","popupAvatar","profileAvatar","profileName","profileAbout","patternMismatch","dataset","errorMessage","validationMessage","showInputError","checkInputValidity","setEventListeners","enableValidation","nameInput","value","jobInput","formNewCard","reset","formNewAvatar","target","closePopupByOverflow","addCloseListeners","formEditProfile","forms","avatarInput","about","preventDefault","body","JSON","stringify","finally","cardNameInput","urlInput","addCard","cardElement","prepend","avatar","backgroundImage","all","_ref2","userInfo","cardsInfo","append"],"sourceRoot":""}